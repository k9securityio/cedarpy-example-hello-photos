# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: hello-photos
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '3'

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  build_branch: ${env:BUILD_BRANCH, 'unknown'}
  runtime: python3.9

custom:
  pythonRequirements:
    # docs: https://www.serverless.com/plugins/serverless-python-requirements
    pythonBin: python3
    dockerizePip: non-linux
    dockerSsh: true
    slim: true
  prune:
    automatic: true
    number: 3


# you can add statements to the Lambda function's IAM Role here
#  iam:
#    role:
#      statements:
#        - Effect: "Allow"
#          Action:
#            - "s3:ListBucket"
#          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#        - Effect: "Allow"
#          Action:
#            - "s3:PutObject"
#          Resource:
#            Fn::Join:
#              - ""
#              - - "arn:aws:s3:::"
#                - "Ref" : "ServerlessDeploymentBucket"
#                - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  # https://www.serverless.com/framework/docs/providers/aws/guide/packaging
  patterns:
    - '*.py'
    - 'rules/**'
    - '!.git/**'
    - '!.idea/**'
    - '!*.iml'
    - '!Makefile'
    - '!__pycache__'
    - '!**/__pycache__'
    - '!node_modules/**'
    - '!package*.json'
    - '!venv*/**'
    - '!dist/**'
    - '!tests/**'

functions:
  hello_cedarpy:
    handler: handler.hello_cedarpy

#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - httpApi:
#          path: /users/create
#          method: get
#      - websocket: $connect
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp
#      - alb:
#          listenerArn: arn:aws:elasticloadbalancing:us-east-1:XXXXXX:listener/app/my-load-balancer/50dc6c495c0c9188/
#          priority: 1
#          conditions:
#            host: example.com
#            path: /hello

#    Define function environment variables here
#    environment:
#      variable2: value2

resources:
  Description: "hello-photos deployment for stage: ${self:provider.stage}, branch: ${self:provider.build_branch}"
  Resources:
    PhotosBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: hello-photos-bucket-${self:provider.stage}

plugins:
  - serverless-python-requirements
  - serverless-prune-plugin

