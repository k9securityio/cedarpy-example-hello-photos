service: hello-photos
frameworkVersion: '3'

provider:
  name: aws
  stage: ${opt:stage, 'dev'}
  region: us-east-1
  build_branch: ${env:BUILD_BRANCH, 'unknown'}
  runtime: python3.9

  environment:
    STAGE: ${self:provider.stage}

  apiGateway:
    minimumCompressionSize: 1024

custom:
  pythonRequirements:
    # docs: https://www.serverless.com/plugins/serverless-python-requirements
    pythonBin: python3
    dockerizePip: non-linux
    dockerSsh: true
    slim: true
  prune:
    automatic: true
    number: 3


# you can add statements to the Lambda function's IAM Role here
#  iam:
#    role:
#      statements:
#        - Effect: "Allow"
#          Action:
#            - "s3:ListBucket"
#          Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#        - Effect: "Allow"
#          Action:
#            - "s3:PutObject"
#          Resource:
#            Fn::Join:
#              - ""
#              - - "arn:aws:s3:::"
#                - "Ref" : "ServerlessDeploymentBucket"
#                - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

package:
  # https://www.serverless.com/framework/docs/providers/aws/guide/packaging
  patterns:
    - '*.py'
    - '!.git/**'
    - '!.idea/**'
    - '!*.iml'
    - '!Makefile'
    - '!__pycache__'
    - '!**/__pycache__'
    - '!node_modules/**'
    - '!package*.json'
    - '!venv*/**'
    - '!dist/**'
    - '!tests/**'

functions:
  hello_cedarpy:
    handler: handler.hello_cedarpy
    description: ${self:service} - check if cedarpy is working

  view_photo:
    handler: handler.view_photo
    description: ${self:service} - View a photo
    events:
      - http:
          path: "users/{userId}/photos/{photoId}"
          method: GET
          authorizer:
            name: authorizer
            resultTtlInSeconds: 30
            identitySource: method.request.header.Authorization
            type: token
  authorizer:
    handler: authorizer.authorize
    description: ${self:service} - API authorizer

resources:
  Description: "hello-photos deployment for stage: ${self:provider.stage}, branch: ${self:provider.build_branch}"
  Resources:
    PhotosBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: hello-photos-bucket-${self:provider.stage}

plugins:
  - serverless-python-requirements
  - serverless-prune-plugin

